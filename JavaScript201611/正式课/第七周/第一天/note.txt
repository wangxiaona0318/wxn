周啸天
QQ:1282347298
TEL:13041086186

1、安装NODE和在WebStorm中配置Node代码提示包

2、扫盲=>常用的DOS命令
   WIN键+R键 -> 运行窗口 -> 输入cmd打开DOS命令窗口

   1)查看本机电脑的IP地址: ipconfig
     IPv4地址：192.168.0.21  (局域网内的IP地址)
     子网掩码：255.255.255.0
     默认网关：192.168.0.1
     如果大家连接的是同一个网络(同一个WIFI),说明大家都在同一个局域网中,子网掩码和默认网关是相同的,这样的话大家就可以进行内部局域网共享了(可应用移动端开发手机调试)

     查看自己电脑的MAC地址(物理地址): ipconfig -all
      MAC地址：电脑连接网络后会生成一个全世界唯一的编码
      物理地址：30-65-EC-18-CD-BB

   2) cls  清屏
      exit 退出DOS窗口
      Ctrl+C 结束当前正在运行的操作

   3)查看自己当前的网络
      ping www.baidu.com  /  ping www.baidu.com -t
      延迟时间越短说明当前的网络越快

   4)打开DOS窗口的时候，默认进入的是C:\Users\zhufengpeixun\磁盘文件目录下，如果使用DOS命令创建文件的话，默认是创建到这个目录下的

     D: 不管当前在哪个目录下,直接进入到D盘目录(进入某一个磁盘)
     cd 20161007  进入到当前目录下20161007这个文件夹中
     cd /    回到根目录
     cd ./   回到当前目录
     cd ../  回到上一级目录
     dir 查看当前目录下的所有文件夹和文件

     ==>我们如果想在指定的文件夹下运行DOS命令，除了通过上述的操作进去外，还有更简单的：直接找到当前要操作的文件目录，Shift键+鼠标右键+在此处打开命令窗口

   5)进入到指定的文件目录下，我们可以使用DOS命令完成I/O操作（所谓的I/O操作指的就是对文件或者文件夹的增删改查）
     mkdir aaa  在当前目录中新建一个叫做aaa的文件夹
     rmdir aaa  在当前目录中删除aaa这个文件夹(前提文件夹是空的)

     copy con xxx.txt(后缀名自己随便) =>在出现的新一行中编辑自己需要写入的内容,编辑完成后想要保存退出: Ctrl+Z , 在按Enter键即可完成保存
     del 11.txt 在当前目录中删除某一个指定的文件

     ...

3、面试题:当我们在浏览器的地址栏中输入一个网址(http://www.zhufengpeixun.com/)到看到网站中的内容,中间都经历了哪些事情?
   客户端:用户自己的电脑(电脑上的浏览器)
   服务器端:我们访问网站所对应的服务器

   开放分享,搭建自己的个人博客(从现在开始就可以把自己平时总结和学习的知识整理成相关的文档,后期博客创建完成后,可以把自己的文档都发布到博客上)

   1、买一台服务器,会有一个外网IP:112.125.158.152
   2、买一个域名:www.zhufengpeixun.com
   3、把自己的项目代码上传到服务器上(FTP上传)
   4、在当前的服务器上发布一个服务(用来管理项目资源文件)，一台服务器上可能会发布好几个服务，如何的区分这些服务? 我们给每一个服务监听一个端口号，服务和服务之间的端口号不能重复；假设我们当前的服务端口号是80；
      ->以后80这个服务就会对服务器上某个磁盘下的文件负责了
   5、域名解析或者DNS解析:把我们买的域名和服务器的外网IP关联到一起,会在DNS服务器上产生一条记录:
      100234 www.zhufengpeixun.com  112.125.158.152
      100235 www.baidu.com  112.126.253.458
      ...
      我们知道的所有网站，都会把域名和自己服务器的外网IP地址，在DNS服务器上存储一条记录


4、在谷歌浏览器的控制台(Network选项)可以看到当前客户端和服务器端交互的所有请求信息

   通过上述的请求交互操作，客户端第一次把index.html中的源代码获取到了，客户端的浏览器开始自上而下的渲染和解析，在渲染解析的过程中遇到 link、img、script... 等标签，还需要重新的向服务器发送请求(重复到DNS找外网IP->找服务器->找服务->返回源代码...这样的过程)，把需要的CSS、图片、JS获取到，在进行渲染....经历了N多次请求后，我们的页面才能展示完整

   如果请求的次数比较多的话，页面打开的速度会变慢，如果要进行优化的话，我们需要“减少HTTP请求的次数”

   思考题：以小组为单位回去后自己想尽一切办法总结页面优化的手段和方案

5、
URI:统一资源标识符  URL+URN=URI
URN:统一资源名称
URL:统一资源定位符
   一个完整的URL其实是包含很多部分的
   http://www.zhufengpeixun.com:80/index.html?name=zf&ag=8#video

   [传输协议:客户端和服务器端内容传输的搬运工(一个快递小哥)]
     HTTP:超文本传输协议(最常用的)
     HTTPS:比HTTP更加安全的超文本传输协议 HTTP SSL
     FTP:文件传输协议,一般应用于把本地的资源文件上传到服务器上
     ...

   [域名 Domain Name]
     一级域名  www.qq.com
     二级域名  sports.qq.com
     三级域名  kbs.sports.qq.com
     ...

   [端口号:用一个数字来区分当前服务器上的不同服务的]
     一台服务器上,服务之间的端口号不能重复,端口号的取值范围是:0~65535之间

     在URL地址中如果我们没有指定端口号(没有写‘:数字’),不同的传输协议,到服务器上找的服务(默认端口号)也是不同的
     http://v.qq.com/   =>80 HTTP传输协议默认找80端口的服务
     https://www.baidu.com/  =>443 HTTPS传输协议默认找的是443端口的服务
     ftp://xxx.xxx  =>21 FTP传输协议默认找的是21端口的服务

   [客户端请求资源文件的目录和名称]
     当前:/index.html  请求的是当前项目根目录下的index.html；
         /css/index.css 请求当前项目根目录下CSS文件夹中的index.css文件；

     真实项目中,我们没有看到看到具体请求的资源文件
       ->http://www.zhufengpeixun.com/html5peixun/ 这样没有写具体请求资源文件的名称,可能存才两种情况:
       1)我们请求的资源文件是服务默认的请求文件(例如:默认的文件可能是index.html或者default.html)，不写的话，服务器端也会把默认文件中的内容返回给客户端,相当于:/html5peixun/index.html

       2)我们当前看到的请求URL是伪造的(伪URL或者URL重写),这样做的话其实是在骗搜索引擎的爬虫,让其能够所收录一些内容,有助于SEO推广，例如：http://www.szyc.com/zydhy/  真实请求的地址：http://www.szyc.com/zhiye/index.aspx


   [问号传参]
     此处：?name=zf&ag=8
     作用：
       ->客户端可以把一些信息传递服给务器端,所使用的传递方式也是有好几种,问号传参就是其中的一种,这里出现的name=zf和age=8其实就是客户端本次传递给服务器端的内容,服务器端可以根据项目的需求,接收到传递的信息,从而给客户端返回想要的结果

       ->前端开发的时候，有时候也会获取到URL地址栏中的问号传递参数的值，从而做一些处理，例如：
       http://kbs.sports.qq.com/kbsweb/teams.htm?tid=11&cid=100000
       http://kbs.sports.qq.com/kbsweb/teams.htm?tid=19&cid=100000
       我们从列表进入到的详细页面其实一个同一个(/kbsweb/teams.htm),但是页面中展示的却是不同的信息,主要就是根据URL中问号传递参数的不一样来判断该展示哪个信息

   [HASH哈希值]
     此处：#video
     作用：
       ->和问号传参一样,客户端也可以通过#HASH把一些内容传递给服务器端
       ->最主要的作用是当前页面的锚点定位(直接的定位到当前页面中元素的ID为video这个区域)
       ->作为前端路由的判断依据(C模块)


6、扫盲
  W3C:万维网联盟 一个非盈利性的机构,主要就是用来制定IT编程语言的规范和标准的
  我们开发者按照标准和规范去开发代码
  浏览器开发商按照标准和规范去解析我们开发的代码,把我们的代码渲染成一个WEB页面

  浏览器有自己渲染解析代码的内核(渲染引擎)
    谷歌Chrome、Safari：V8引擎、webkit内核
    火狐FirFox：Gecko
    IE：Trident
    ...
    每个浏览器渲染解析的内核不一样,解析的机制也是不一样的,所以导致了浏览器的兼容

  我们写的代码只有放在浏览器的内核中进行解析,才会起到自己应有的作用,否则就是一堆破代码；所以我们之前是这样定义JS的：一门轻量级的客户端(浏览器)脚本编程语言；


  从现在开发JS有了全新的解释:JS是一门编程语言,可以实现全栈开发的编程语言,和我们之前了解的PHP、C#、.NET(dot net)、JAVA...语言是相同的  =>除了浏览器可以解析渲染我们的JS代码，我们也可以用NODE来解析渲染JS代码


7、NODE
   NODE不是我们想象中的后台语言,它不是一门语言,它是一个和浏览器类似的工具或者平台,在NODE平台中,可以把我们写的JS代码解析出来,而且NODE和谷歌浏览器一样都是采用V8引擎渲染解析的。

   以后我们只要在服务器上安装了NODE，就可以在服务器上用JS代码编写一些服务器端需要处理的事情和操作，最后把这些JS在服务器上的NODE环境下执行即可==>JS也可以写后台程序了

   ->如何在NODE环境下执行JS
    安装完成NODE,默认会把NODE的命令集成到DOS中,以后在DOS窗口中也可以执行NODE命令

    1)首先找到要执行的JS文件所在的目录，在这个目录中打开DOS命令窗口(Shift+鼠标右键+在此处打开命名窗口)，在DOS窗口中执行NODE命令：node xxx.js ->把JS代码在NODE环境下执行了

    2)如果使用的是WB这个IDE，我们直接的在需要执行的JS代码空白处，鼠标右键，Run xxx.js即可  ->WB中继承了NODE的执行，上述的这样操作，就是由WB调取出NODE的执行文件，把需要执行的JS执行了


8、NODE的优势(相对于传统的后台语言)
   ->快，因为他是基于V8引擎渲染JS的
   ->基于单线程的异步操作
   ->无阻塞的I/O操作

   JS在客户端浏览器中运行的时候，浏览器为了保证用户的安全，是不允许JS操作客户端的文件的，也就是JS在客户端运行不能进行I/O操作(有一个东西浏览器提供<input type='file'/>)

   JS运行在服务器端的NODE环境中，由于操作的是自己的服务器，不可能随意进行破坏，所以NODE环境下提供了JS对于服务器的I/O操作.

9、在NODE环境中也提供了，供JS调取的属性和方法
  1)内置模块

  2)自定义模块(自己写的模块)
    在NODE环境下，创建的每一个JS文件都是一个独立的模块，互相之间是不冲突的

    想在B模块中调取A模块中的FN方法：
      在A中
      module.exports={fn:fn};

      在B中
      var a=require('./A');

      a.fn();

  思考题：我有三个模块A、B、C，A中有一个sum的方法实现任意数求和，B中有一个叫做avg的方法实现求平均数(先求和然后除以个数算出平均数 ->B中就需要调取A中的sum)，C中调取B中的avg方法，传递一堆数，实现求平均数即可

  课时133~134


  3)第三方模块(第三方模块的管理统一使用NPM命令)
     下载:https://www.npmjs.com/(第三方模块都在这个网站管理着)
        例如：我们想使用LESS模块
        npm install less  在当前项目目录下下载LESS模块(执行 lessc -v 查看是否安装成功)
        npm install less -g 在全局下下载LESS模块(-global)
        npm uninstall less / npm uninstall less -g 卸载第三方模块

     引入使用:
        var less = require('less');  //->require导入
        less.render();  //->导入进来后就可以执行LESS模块下的render方法了











